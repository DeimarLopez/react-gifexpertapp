{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGfs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loadig","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAmCeA,EAhCK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,mCACA,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCRlBG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAUH,GAD9C,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAYXM,GAZW,4CAAH,sDCENO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,6CAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,QAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAXAC,qBAAU,WACNxB,EAAOC,GACNwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,QAAQ,SAGlB,CAACpB,IAGIqB,EDhBsBK,CAAa1B,GAA9Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,OAGnB,OACI,qCACA,6BAAKpB,IACJoB,GAAU,yCACX,qBAAKJ,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEbpBgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAQA,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCfzD6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ae29a0b9.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories})=>{\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleINputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2){\r\n            setCategories(cats =>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleINputChange}\r\n            />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","export const getGfs = async(category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Vadq7p5UOStMJvuDgotZZgJAw9ftw4sg`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__backInLeft\">\r\n           <img src={url} alt={title} />\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n  ","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loadig} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loadig && <p>Cargando</p>}\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => \r\n                        <GifGridItem \r\n                        key={img.id} \r\n                        {...img}\r\n                        />)\r\n                    }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGfs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loadig: true\r\n    });\r\n\r\n        \r\n    useEffect(()=>{\r\n        getGfs(category)\r\n        .then(imgs=>{\r\n            setstate({\r\n                data: imgs,\r\n                loadig: false\r\n            })\r\n        });\r\n    },[category]) \r\n\r\n\r\n    return state;\r\n}\r\n","import react, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    /* const handleAdd = () =>{\r\n        setCategories([...categories,'vegeata']);\r\n    } */\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr></hr>\r\n        <ol>\r\n            {\r\n                categories.map(category => <GifGrid key={category} category={category}/>)\r\n            }\r\n        </ol>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}